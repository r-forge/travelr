# travelr namespace

# DLL load instruction
useDynLib(travelr,
          shortest_paths,
          load_paths,
          build_and_load_paths,
          skim_paths,
          walk_paths,
          walk_pairs,
          intercept_paths)

# Highway Network functions
export(map.highway.nodes)
S3method(summary,highway.node.map)
S3method(print,highway.node.map)
export(as.highway.net)
S3method(summary,highway.net)
S3method(print,highway.net)
S3method(print,sum.highway.net)

# Assignment Set operation functions
export(free.flow)
export(build.paths)
export(load.paths)
export(build.and.load.paths)
export(intercept.paths)
export(skim.paths)

# Assignment Set constrution functions
export(cost.integrator)
export(build.serious.objective.function)
export(build.easy.objective.function)
export(new.assignment.set)
export(make.assignment.class)
export(add.assignment.class)
export(build.BPR.function)
export(new.intercept.set)

# High-level algorithms
export(highway.assign)

# Algorithm Configuration Utilities
export(parse.control)
export(build.equil.stats.function)
export(build.convergence.test)
export(build.intercept.function)

# Assignment Algorithm Helpers
export(weighted.update.diff)
export(weighted.update)
export(weighted.update.intercept)
export(build.lambda.function)
export(build.lambda.search)

# Utility functions
export(rmse)
export(ipf)
S3method(print,iterative.fit)

# Low-level path functions
export(.build.network.set)
export(.shortest.paths)
export(.load.paths)
export(.skim.paths)
export(.intercept.paths)
export(.walk.paths)
